{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Hi! My name is Anatoly Scherbakov, and this is my little personal site. See: A few random articles that I've written, My ongoing projects , Unfinished ideas , and CV . Why yeti ? I've lived in mountains of Siberia for quite a while. Cold, snow, mountains, forest, \u2014 who else would you expect to meet there indeed?","title":"Home"},{"location":"#why-yeti","text":"I've lived in mountains of Siberia for quite a while. Cold, snow, mountains, forest, \u2014 who else would you expect to meet there indeed?","title":"Why yeti?"},{"location":"articles/","text":"{{ blog_content }}","title":"Articles"},{"location":"articles/bash-basename/","text":"bash-3.2$ FILENAME = somefile.tar.gz bash-3.2$ echo \" ${ FILENAME %%.* } \" somefile bash-3.2$ echo \" ${ FILENAME %.* } \" somefile.tar","title":"Extract base name & extension in bash"},{"location":"articles/tmux/","text":"See in Whimsical .","title":"tmux"},{"location":"articles/cs111/","text":"","title":"CS111 Discrete Mathematics"},{"location":"articles/cs111/bounds-extremum-infimum/","text":"See in Whimsical .","title":"Bounds, extremum, & infimum"},{"location":"articles/cs111/cantor-theorem/","text":"See in Whimsical .","title":"Cantor's theorem"},{"location":"articles/cs111/functions/","text":"See in Whimsical .","title":"Functions"},{"location":"articles/cs111/max-and-min/","text":"See in Whimsical .","title":"Max & Min"},{"location":"articles/cs111/relations/","text":"See in Whimsical .","title":"Relations"},{"location":"articles/cs111/algebraic-structures/","text":"See in Whimsical .","title":"Algebraic Structures"},{"location":"articles/cs111/algebraic-structures/abelian-group/","text":"See in Whimsical .","title":"Abelian Group"},{"location":"articles/cs111/algebraic-structures/field/","text":"See in Whimsical .","title":"Field"},{"location":"articles/cs111/algebraic-structures/group/","text":"See in Whimsical .","title":"Group"},{"location":"articles/cs111/algebraic-structures/monoid/","text":"See in Whimsical .","title":"Monoid"},{"location":"articles/cs111/algebraic-structures/ring/","text":"See in Whimsical .","title":"Ring"},{"location":"articles/jira-cli/","text":"If you have to use Atlassian JIRA a lot, you very quickly grow tired of the multitude of routine operations in the system's UI. Wishing to improve your productivity you start looking for a CLI tool. This page is an overview of several CLI tools to manage issues in JIRA that I had a chance to review. This page was only written after I spent time to write my own rudimentary tool in Python and to use it for a while, \u2014 only to find out later that there are a few much more mature tools which I should have been using instead in the first place. That's the importance of doing proper research: that might save you a lot of effort and precious time. Better later then never, right? Product Language Auth token in env Supports fixVersions field CLI options \u2192 JQL query ankitpokhrel/jira-cli Go \u2714\ufe0f \u274c \u2714\ufe0f go-jira Go \u2714\ufe0f \u274c \u274c alisaifee/jira-cli Python \u274c \u2714\ufe0f \u274c pycontribs/jira Python \u2714\ufe0f \u274c \u274c Unmaintained I am no longer using JIRA, and therefore the page hadn't been updated since the moment of original publication.","title":"Comparison of CLI tools for JIRA"},{"location":"articles/jira-cli/criteria/auth/","text":"The recommended auth method at the moment is API token auth . In JIRA UI, you obtain a token and store it somehow in your environment variables (for example, in ~/.profile ). I believe it important that a CLI tool can obtain token from environment variables. That: Makes configuration easier by eliminating the need of a special config file; Simplifies integration of the JIRA CLI tool into CI for various automation tasks. I believe a proper tool should have this capability.","title":"Retrieve auth token from an environment variable"},{"location":"articles/jira-cli/products/ankitpokhrel-jira-cli/","text":"Configuration Configure the environment variable and run jira init .","title":"ankitpokhrel/jira-cli"},{"location":"articles/jira-cli/products/ankitpokhrel-jira-cli/#configuration","text":"Configure the environment variable and run jira init .","title":"Configuration"},{"location":"articles/jira-cli/products/go-jira/","text":"How to install wget -O ~/bin/jira https://github.com/go-jira/jira/releases/download/v1.0.27/jira-linux-amd64 chmod +x ~/bin/jira How to use cat > ~/.jira.d/config.yml endpoint: https://yeti-sh.atlassian.net user: talk@yeti.sh # replace this with yours password-source: keyring ^D Create Jira API token Call jira session You will be asked for the token and it will be persisted. Commands List issues jira ls --assignee talk@yeti.sh Did not work for me The tool won't ls any of our relevant issues, see Github issue here . Create a new issue jira create --project PROJ --issuetype = Task --override 'assignee=talk@yeti.sh' --override 'epic=PROJ-123' --override 'release=1.0.1 beta' --override 'summary=Add Thing.some_id column' Send issue to In Progress from Queued jira transition --noedit 'DEVELOPMENT STARTED' PROJ-2575 Send issue to Code Review from In Progress jira transition --noedit 'Code Review' PROJ-2575 How to add issue to an epic jira epic add PROJ-126 PROJ-2663 Link two issues jira issuelink PROJ-2382 Blocks PROJ-2667 The order is reversed. In fact, 2667 will block 2382 in this example.","title":"go-jira"},{"location":"articles/jira-cli/products/go-jira/#how-to-install","text":"wget -O ~/bin/jira https://github.com/go-jira/jira/releases/download/v1.0.27/jira-linux-amd64 chmod +x ~/bin/jira","title":"How to install"},{"location":"articles/jira-cli/products/go-jira/#how-to-use","text":"cat > ~/.jira.d/config.yml endpoint: https://yeti-sh.atlassian.net user: talk@yeti.sh # replace this with yours password-source: keyring ^D Create Jira API token Call jira session You will be asked for the token and it will be persisted.","title":"How to use"},{"location":"articles/jira-cli/products/go-jira/#commands","text":"","title":"Commands"},{"location":"articles/jira-cli/products/go-jira/#list-issues","text":"jira ls --assignee talk@yeti.sh Did not work for me The tool won't ls any of our relevant issues, see Github issue here .","title":"List issues"},{"location":"articles/jira-cli/products/go-jira/#create-a-new-issue","text":"jira create --project PROJ --issuetype = Task --override 'assignee=talk@yeti.sh' --override 'epic=PROJ-123' --override 'release=1.0.1 beta' --override 'summary=Add Thing.some_id column'","title":"Create a new issue"},{"location":"articles/jira-cli/products/go-jira/#send-issue-to-in-progress-from-queued","text":"jira transition --noedit 'DEVELOPMENT STARTED' PROJ-2575","title":"Send issue to In Progress from Queued"},{"location":"articles/jira-cli/products/go-jira/#send-issue-to-code-review-from-in-progress","text":"jira transition --noedit 'Code Review' PROJ-2575","title":"Send issue to Code Review from In Progress"},{"location":"articles/jira-cli/products/go-jira/#how-to-add-issue-to-an-epic","text":"jira epic add PROJ-126 PROJ-2663","title":"How to add issue to an epic"},{"location":"articles/jira-cli/products/go-jira/#link-two-issues","text":"jira issuelink PROJ-2382 Blocks PROJ-2667 The order is reversed. In fact, 2667 will block 2382 in this example.","title":"Link two issues"},{"location":"articles/jira-cli/products/jira-cli/","text":"How to auth? Run jira-cli configure , choose basic_auth and provide your email and your API token obtainable at your Jira account settings. Command line examples Creating a new task ...does not work :( jira-cli new \\ --type = Story \\ --project = PROJ \\ --assign = 'talk@yeti.sh' \\ --priority = High \\ 'Initialize data-lake-downloader project' --description 'Start a new project from project-template.' \u21d2 The issue type selected is invalid. Further investigation halted I had no luck bringing this tool online.","title":"alisaifee/jira-cli"},{"location":"articles/jira-cli/products/jira-cli/#how-to-auth","text":"Run jira-cli configure , choose basic_auth and provide your email and your API token obtainable at your Jira account settings.","title":"How to auth?"},{"location":"articles/jira-cli/products/jira-cli/#command-line-examples","text":"","title":"Command line examples"},{"location":"articles/jira-cli/products/jira-cli/#creating-a-new-task","text":"...does not work :( jira-cli new \\ --type = Story \\ --project = PROJ \\ --assign = 'talk@yeti.sh' \\ --priority = High \\ 'Initialize data-lake-downloader project' --description 'Start a new project from project-template.' \u21d2 The issue type selected is invalid. Further investigation halted I had no luck bringing this tool online.","title":"Creating a new task"},{"location":"articles/jira-cli/products/pycontribs-jira/","text":"Installation pip install jira Together with the Python library we get the command line utility.","title":"pycontribs/jira"},{"location":"articles/jira-cli/products/pycontribs-jira/#installation","text":"pip install jira Together with the Python library we get the command line utility.","title":"Installation"},{"location":"articles/mkdocs-blog-plugins/","text":"MkDocs was designed to manage software project documentation, but in fact it is a very wide purpose static site generator. Can you use it to write your personal blog? Yes, most assuredly. Here are a few plugins for that.","title":"MkDocs plugins for blogging"},{"location":"articles/pykg/","text":"I have created this table to compare a few knowledge graph engines by a few subjectively chosen criteria. They might not be the ones that you would have chosen. For example: I do not believe the number of GitHub stars is the leading criterion to choose a software tool, but I do think their number can inform about how widely known and how well-supported the solution is. At the moment of this writing, I have not used the majority of the listed tools, and the table might contain errors. PRs are very welcome.","title":"Choosing a Knowledge Graph management system for a Python app"},{"location":"articles/pykg/redisgraph/","text":"See: https://redis.com/blog/getting-started-with-knowledge-graphs-in-redisgraph/","title":"Redisgraph"},{"location":"articles/pykg/sparql-support/","text":"SPARQL is a query language required for RDFLib support , and is a component of canonical semantic technology stack. Value Description Count 1.1 Latest version of the language with update capabilities. 8 \u274c Neo4j only supports Cypher graph query language. 1 \u274c No SPARQL support available. 1","title":"SPARQL"},{"location":"articles/pykg/supports-rdflib/","text":"rdflib seems to be the de facto standard for knowledge graph management in Python. It is also easy to start with: in a few lines of code, one can create an in-memory graph, ingest data and query it. This is how one may start building their KG oriented Python application, but applications require persistence and scalability - qualities found in mature knowledge graph database management systems. If a KGMS provides a backend for a rdflib the developer can easily migrate from a naive in-memory rdflib solution to a solution backed by the KGMS.","title":"RDFLib support"},{"location":"articles/pykg/visualization/","text":"Under graph visualization , we mean a visual user interface where a person can browse the graph using their mouse and keyboard, navigating through the graph's nodes and edges. In this comparison, we illustrate whether particular graph database supports a built-in UI of this kind, and provide a proof link if we have it.","title":"Visualization"},{"location":"cv/","text":"Key Expertise Design and architecture of business automation software Its implementation in Python programming language Code review, peer programming Keeping code clean & maintainable Currently Software Developer at Datafold | datafold.com Creating solutions to make data engineers' life better. Technologies Code Python 3 | mypy, flake8 | Pydantic, FastAPI | pandas | A bit of Rust Storage & Communication Systems PostgreSQL | Redis | MongoDB | ElasticSearch IaC & AWS Lambda, S3, EC2, ECS, RDS, SQS, Glue, Step Functions, EventBridge, Redshift | Terraform | CircleCI Misc Git | JIRA | PyCharm IDE Career 2012 \u2014 2022 | Recall Masters Inc \u2014 Senior Software Developer, Team Lead Recall Masters Inc (California, US) \u2014 An Automotive Safety Company \u2014 recallmasters.com Implemented the first MVP and, subsequently, the full fledged automation app on Django to support the company's business process. Built the internal development department supporting the system and moving forward together with the growing business. Handling the transfer from the monolith application to microservices based system. 2011 \u2014 2014 | Vboost Inc \u2014 Software Developer Vboost Inc (California, US) \u2014 An Automotive Marketing Company \u2014 vboost.com Built an MVP and then the full scaled business automation system on Python/Django. Invited developers and formed a small dev team to support the project. 2012 | Freelance odesk.com (now upwork.com ) A number of projects, mostly in Python and Django. The latter, at some point, became one of my favorite tools. 2008 \u2014 2011 | OngNet Inc \u2014 Web Developer OngNet Inc (Gorno-Altaysk, Russia) \u2014 Region scale broadband internet provider Company website (in PHP and subsequently Python). Internal automation for billing system and routing. 2007 \u2014 2013 | Tomsk University of Control Systems and Microelectronics \u2014 student TUCSR (Tomsk, Russia) \u2014 One of the leading tech universities of Russia to the east of Urals Major: Applied Computer Science in Economics Degree: specialist/engineer, with honors Thesis: Discrete Event Simulation of Business Processes Kind of childish one, actually Online education","title":"CV"},{"location":"cv/#key-expertise","text":"Design and architecture of business automation software Its implementation in Python programming language Code review, peer programming Keeping code clean & maintainable","title":"Key Expertise"},{"location":"cv/#currently","text":"Software Developer at Datafold | datafold.com Creating solutions to make data engineers' life better.","title":"Currently"},{"location":"cv/#technologies","text":"","title":"Technologies"},{"location":"cv/#code","text":"Python 3 | mypy, flake8 | Pydantic, FastAPI | pandas | A bit of Rust","title":"Code"},{"location":"cv/#storage-communication-systems","text":"PostgreSQL | Redis | MongoDB | ElasticSearch","title":"Storage &amp; Communication Systems"},{"location":"cv/#iac-aws","text":"Lambda, S3, EC2, ECS, RDS, SQS, Glue, Step Functions, EventBridge, Redshift | Terraform | CircleCI","title":"IaC &amp; AWS"},{"location":"cv/#misc","text":"Git | JIRA | PyCharm IDE","title":"Misc"},{"location":"cv/#career","text":"","title":"Career"},{"location":"cv/#2012-2022-recall-masters-inc-senior-software-developer-team-lead","text":"Recall Masters Inc (California, US) \u2014 An Automotive Safety Company \u2014 recallmasters.com Implemented the first MVP and, subsequently, the full fledged automation app on Django to support the company's business process. Built the internal development department supporting the system and moving forward together with the growing business. Handling the transfer from the monolith application to microservices based system.","title":"2012 \u2014 2022 | Recall Masters Inc \u2014 Senior Software Developer, Team Lead"},{"location":"cv/#2011-2014-vboost-inc-software-developer","text":"Vboost Inc (California, US) \u2014 An Automotive Marketing Company \u2014 vboost.com Built an MVP and then the full scaled business automation system on Python/Django. Invited developers and formed a small dev team to support the project.","title":"2011 \u2014 2014 | Vboost Inc \u2014 Software Developer"},{"location":"cv/#2012-freelance","text":"odesk.com (now upwork.com ) A number of projects, mostly in Python and Django. The latter, at some point, became one of my favorite tools.","title":"2012 | Freelance"},{"location":"cv/#2008-2011-ongnet-inc-web-developer","text":"OngNet Inc (Gorno-Altaysk, Russia) \u2014 Region scale broadband internet provider Company website (in PHP and subsequently Python). Internal automation for billing system and routing.","title":"2008 \u2014 2011 | OngNet Inc \u2014 Web Developer"},{"location":"cv/#2007-2013-tomsk-university-of-control-systems-and-microelectronics-student","text":"TUCSR (Tomsk, Russia) \u2014 One of the leading tech universities of Russia to the east of Urals Major: Applied Computer Science in Economics Degree: specialist/engineer, with honors Thesis: Discrete Event Simulation of Business Processes Kind of childish one, actually Online education","title":"2007 \u2014 2013 | Tomsk University of Control Systems and Microelectronics \u2014 student"},{"location":"ideas/","text":"In this section of the site, I publish ideas for projects I haven't got time or energy to even start. These pages are intended to: structure my thoughts on these subjects, get these thoughts out of my system, free my mind to think about the issues at hand rather than distracting to something new that tries to grasp my imagination, and perhaps provide groundwork to start those projects someday in the future \u2014 maybe to myself or to someone else. Consider this section of the site a shameless collection of quick and dirty drafts.","title":"\ud83d\udca1 Ideas"},{"location":"ideas/interplanner/","text":"Target audience Linked Data community, Tech-savvy individuals, Companies, Individuals from the general audience, Government agencies, the humanity as a whole. Problem When you have a plan, normally the reality never goes exactly as planned. Every kind of random things happen, disrupting the plans of individuals, companies, governments, and the whole of mankind. Planning is extremely difficult to get right. However, it is still very much necessary for survival on all levels: from an individual to the whole species. We have huge problems which can't be solved without such a level of planning: improve education on a global scale, solve the shortage of energy, prevent pandemics proactively, solve the global climate change, from producing waste, go to a closed-cycle economically viable manufacturing system, evolve to become an interplanetary species, \u2026 These issues will define it whether we survive \u2014 or we die out. In order to make planning useful, our plans need to satisfy the following criteria. the planning system of an individual, organization, or the whole human race must include multiple different scenarios of what might happen; there must be scenarios on multiple levels: short-term, mid-term, long-term; every scenario must be assigned a probability, at least relative and crude, of its coming into existence; the scenarios, especially short term ones, must be revised constantly. We do not have a system that does that, at least, semi-automatically. Essence interplanner is a headless planning maintenance system that operates over an iolanta -capable semantic graph. That permits to use iolanta oracles to retrieve data from sources, and to upload the results of planning to the graph whatever medium it might use. Inputs of interplanner are semantic data from any kind of source: time tracking records, existing short-term plans manually managed by the person in a tool like Todoist, oracles of neural network systems, financial statements, cost and income estimates, projected events and their frames (min time \u2026 max time), wikidata, dbpedia, github, any other information source supported by iolanta ecosystem. interplanner outputs an RDF dataset which encodes (typically very many) scenarios: every scenario is a sequence of events, each tied to time, events might be accompanied by financial information, links to external resources, whatever else, each scenario might be ranked. Info Perhaps rename this tool to scenarist or scriptwriter ? How is this done? Judging from the input data, interplanner will do the following stages. Combinatorial explosion. Given the input data and the time frame to plan for, it will first deduce every scenario that is possible given the input data. This stage will give us a huge number of scenarios. Selection. Exclude the scenarios which are impossible. exclude events which are of too low probability over the time span we are planning for, if a scenario contains mutually exclusive events then skip it, if this scenario is conflicting with a plan of another level, skip it, etc. Optimization. Rank every scenario according to the optimization function the user has requested. That might be time spent on certain tasks, or achievement of certain goals, or whatever. As a result of an interplanner run we get a semantic graph of scenarios from which we can choose those that we like. Multiple such incarnations can be used in a hierarchical manner. You can't recalculate the global plan for the whole of humanity every day, it's too large; but you can recalculate small pieces of it here and there, and use their integrated results as inputs for the master strategy. Vocabulary examples interplanner will very heavily rely upon other systems. For example, - accounting/financial systems to understand what we can afford, - legal data to know how much time a person can work and which days are holidays or days off. In general, something like this can be imagined: requiresTime to define how long an event or task takes to be completed, hasPreRequisite to define relationships between tasks, hasProbabililty defines how possible an event is, \u2026 State of the art Design methods by G. K. Jones Existing Optimization systems, if any Discrete optimization methods and strategies Evolution Octadocs? Can this be an application of Octadocs? How can it be used to improve software project documentation in view of how companies plan their work with task trackers? I do not know at this point. iolanta first this will probably be a personal tool, and then it can be expanded to be able to upload scenarios to IPFS and render them from there. \u2026","title":"interplanner"},{"location":"ideas/interplanner/#target-audience","text":"Linked Data community, Tech-savvy individuals, Companies, Individuals from the general audience, Government agencies, the humanity as a whole.","title":"Target audience"},{"location":"ideas/interplanner/#problem","text":"When you have a plan, normally the reality never goes exactly as planned. Every kind of random things happen, disrupting the plans of individuals, companies, governments, and the whole of mankind. Planning is extremely difficult to get right. However, it is still very much necessary for survival on all levels: from an individual to the whole species. We have huge problems which can't be solved without such a level of planning: improve education on a global scale, solve the shortage of energy, prevent pandemics proactively, solve the global climate change, from producing waste, go to a closed-cycle economically viable manufacturing system, evolve to become an interplanetary species, \u2026 These issues will define it whether we survive \u2014 or we die out. In order to make planning useful, our plans need to satisfy the following criteria. the planning system of an individual, organization, or the whole human race must include multiple different scenarios of what might happen; there must be scenarios on multiple levels: short-term, mid-term, long-term; every scenario must be assigned a probability, at least relative and crude, of its coming into existence; the scenarios, especially short term ones, must be revised constantly. We do not have a system that does that, at least, semi-automatically.","title":"Problem"},{"location":"ideas/interplanner/#essence","text":"interplanner is a headless planning maintenance system that operates over an iolanta -capable semantic graph. That permits to use iolanta oracles to retrieve data from sources, and to upload the results of planning to the graph whatever medium it might use. Inputs of interplanner are semantic data from any kind of source: time tracking records, existing short-term plans manually managed by the person in a tool like Todoist, oracles of neural network systems, financial statements, cost and income estimates, projected events and their frames (min time \u2026 max time), wikidata, dbpedia, github, any other information source supported by iolanta ecosystem. interplanner outputs an RDF dataset which encodes (typically very many) scenarios: every scenario is a sequence of events, each tied to time, events might be accompanied by financial information, links to external resources, whatever else, each scenario might be ranked. Info Perhaps rename this tool to scenarist or scriptwriter ?","title":"Essence"},{"location":"ideas/interplanner/#how-is-this-done","text":"Judging from the input data, interplanner will do the following stages. Combinatorial explosion. Given the input data and the time frame to plan for, it will first deduce every scenario that is possible given the input data. This stage will give us a huge number of scenarios. Selection. Exclude the scenarios which are impossible. exclude events which are of too low probability over the time span we are planning for, if a scenario contains mutually exclusive events then skip it, if this scenario is conflicting with a plan of another level, skip it, etc. Optimization. Rank every scenario according to the optimization function the user has requested. That might be time spent on certain tasks, or achievement of certain goals, or whatever. As a result of an interplanner run we get a semantic graph of scenarios from which we can choose those that we like. Multiple such incarnations can be used in a hierarchical manner. You can't recalculate the global plan for the whole of humanity every day, it's too large; but you can recalculate small pieces of it here and there, and use their integrated results as inputs for the master strategy.","title":"How is this done?"},{"location":"ideas/interplanner/#vocabulary-examples","text":"interplanner will very heavily rely upon other systems. For example, - accounting/financial systems to understand what we can afford, - legal data to know how much time a person can work and which days are holidays or days off. In general, something like this can be imagined: requiresTime to define how long an event or task takes to be completed, hasPreRequisite to define relationships between tasks, hasProbabililty defines how possible an event is, \u2026","title":"Vocabulary examples"},{"location":"ideas/interplanner/#state-of-the-art","text":"Design methods by G. K. Jones Existing Optimization systems, if any Discrete optimization methods and strategies","title":"State of the art"},{"location":"ideas/interplanner/#evolution","text":"Octadocs? Can this be an application of Octadocs? How can it be used to improve software project documentation in view of how companies plan their work with task trackers? I do not know at this point. iolanta first this will probably be a personal tool, and then it can be expanded to be able to upload scenarios to IPFS and render them from there. \u2026","title":"Evolution"},{"location":"ideas/python-di/","text":"Target audience Python software developers. Essence from depend import Depends class OrientDB : def query ( self , text : str ): ... ... def retrieve_settings_from_graph ( orient_db : OrientDB = Depends ( OrientDB )) -> Settings : orient_db . query ( ... ) def reply_to_user_request ( settings : Settings = Depends ( retrieve_settings_from_graph ), ): ... In this snippet, Depends() should magically resolve to the OrientDB instance in runtime, or it calls retrieve_settings_from_graph function. Moreover, if multiple instances of dependable objects are used they will be only instantiated once during the runtime of the process because the library maintains a registry of cached dependencies. State of the art Existing DI libraries for Python TODO A survey of alternatives is necessary here. Maybe such a library does already exist? proofit404/dependencies python-inject https://github.com/Neoteroi/rodi https://github.com/ets-labs/python-dependency-injector https://github.com/bobthemighty/punq Similar things pytest fixtures are very similar. Implementation details Can be probably done using __new__ or something. The repository of objects is essentially a global registry, I do not know whether that is a good thing. A question to research.","title":"Python Dependency Injection"},{"location":"ideas/python-di/#target-audience","text":"Python software developers.","title":"Target audience"},{"location":"ideas/python-di/#essence","text":"from depend import Depends class OrientDB : def query ( self , text : str ): ... ... def retrieve_settings_from_graph ( orient_db : OrientDB = Depends ( OrientDB )) -> Settings : orient_db . query ( ... ) def reply_to_user_request ( settings : Settings = Depends ( retrieve_settings_from_graph ), ): ... In this snippet, Depends() should magically resolve to the OrientDB instance in runtime, or it calls retrieve_settings_from_graph function. Moreover, if multiple instances of dependable objects are used they will be only instantiated once during the runtime of the process because the library maintains a registry of cached dependencies.","title":"Essence"},{"location":"ideas/python-di/#state-of-the-art","text":"","title":"State of the art"},{"location":"ideas/python-di/#existing-di-libraries-for-python","text":"TODO A survey of alternatives is necessary here. Maybe such a library does already exist? proofit404/dependencies python-inject https://github.com/Neoteroi/rodi https://github.com/ets-labs/python-dependency-injector https://github.com/bobthemighty/punq","title":"Existing DI libraries for Python"},{"location":"ideas/python-di/#similar-things","text":"pytest fixtures are very similar.","title":"Similar things"},{"location":"ideas/python-di/#implementation-details","text":"Can be probably done using __new__ or something. The repository of objects is essentially a global registry, I do not know whether that is a good thing. A question to research.","title":"Implementation details"},{"location":"projects/","text":"anatoly-scherbakov/documented : docstrings + placeholders = user friendly exception messages with next to no boilerplate. https://github.com/octadocs is a plugin for mkdocs.org that empowers a static site built on MkDocs with a queryable graph database. \u2014 Example: https://flake8.codes https://platonic.tools is a set of Python libraries to represent various backends as Pythonic data constructs (for example, a Redis collection as a Python dict ) https://github.com/anatoly-scherbakov/geopatterns-demo/ is a demo project to showcase how to write cloud-native Python code on AWS Lambda platform and manage it using HashiCorp Terraform, \u2014 prepared for, and demonstrated at, Barnaul Python Conf 2021 (see below) https://github.com/ysv-rs/ysv is a Rust command-line application that converts CSV input into CSV output, cleans and standardizes the data https://github.com/anatoly-scherbakov/vendetta is a Python app that generates CSV tables with randomized data based on YAML specifications for testing purposes","title":"Projects"}]}